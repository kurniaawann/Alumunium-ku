generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // Ganti dengan "mysql" / "sqlite" sesuai database kamu
  url      = env("DATABASE_URL")
}

model User {
  userId     String       @id  @map("user_id")         // Primary key
  userName      String    @db.VarChar(255) @map("user_name")
  noHandphone   String   @unique @db.VarChar(15) @map("no_handphone")                                       // Nama user
  email         String   @unique @db.VarChar(255)                                                         // Email user
  password   String                                                          // Password user (hash)
  createdAt  DateTime  @default(now())        @map("created_at")
  isVerified    Boolean  @default(false) @map("is_verified")            // Tanggal pembuatan akun

  otp          Otp []      // Relasi ke Otp
  stockLogs    StockLog[]                                             // Relasi ke stock_logs

  @@map("user")
}

model Otp {
  userId       String        @unique @map("user_id")
  otpCode      String        @db.VarChar(6)  @map("otp_code")
  createdAtOtp DateTime   @default(now())  @map("created_at_otp")
  expiresAtOtp DateTime?   @map("expires_at_otp")
  user User @relation(fields: [userId], references: [userId], onDelete: Cascade)
  

  @@map("otp") 
}

model Authentication {
  accessToken String @unique @map("access_token")

  @@map("authentication")
}


model Item {
  itemId     String       @id  @map("item_id")         // Primary key
  item_name       String    @db.VarChar(255) @map("item_name")                                    // Nama barang
  itemCode   Int?                      @map("item_code")                      // Kode barang (opsional)
  stock      Int                                                             // Jumlah stok saat ini
  createdAt  DateTime  @default(now())        @map("created_at")             // Tanggal barang dibuat

  incomingItems IncomingItem[]                                          // Relasi ke incoming_items
  outgoingItems OutgoingItem[]   
  usetItem UsedItem[]                                         // Relasi ke outgoing_items

  @@map("items")
}

model IncomingItem {
  incomingItemsId String      @id  @map("incoming_items_id") 
  itemId          String                                    @map("item_id")     // Foreign key ke items
  quantity        Int                                                             // Jumlah barang masuk
  receivedBy      String    @db.VarChar(100)             @map("received_by")     // Diterima oleh siapa
  createdAt       DateTime                               @map("created_at")     // Tanggal barang masuk

  item            Item      @relation(fields: [itemId], references: [itemId])    // Relasi ke Item

  @@map("incoming_items")
}

model OutgoingItem {
  incomingItemsId String    @id                      @map("incoming_items_id")     // Primary key (relasi langsung)
  itemId          String                              @map("item_id")               // Foreign key ke item
  quantity        Int                                                             // Jumlah barang keluar
  sentTo          String @db.VarChar(100)          @map("sent_to")              // Barang dikirim ke mana
  handledBy       String @db.VarChar(100)          @map("handled_by")           // Ditangani oleh siapa
  description     String @db.Text                                                      // Keterangan tambahan (opsional)

  item            Item         @relation(fields: [itemId], references: [itemId])                   // Relasi ke item

  @@map("outgoing_items")
}

model StockLog {
  logId      String       @id                           // Primary key untuk setiap log
  userId     String                                             @map("user_id")      // Foreign key ke User
  changeType ChangeType                                         @map("change_type")  // Jenis perubahan stok: IN / OUT
  quantity   Int                                                                 // Jumlah yang berubah
  description String    @db.Text                                                  // Deskripsi aktivitas
  createdAt  DateTime   @default(now())                 @map("created_at")         // Waktu log dibuat

  user       User       @relation(fields: [userId], references: [userId])      // Relasi ke user

  @@map("stock_logs")
}

model UsedItem {
  usedItemId  String       @id  @map("used_item_id")       // Primary key
  itemId      String                                        @map("item_id")           // Foreign key ke item
  quantity    Int                                                                  // Jumlah barang yang digunakan
  usedBy      String    @db.VarChar(100)                @map("used_by")           // Digunakan oleh siapa
  purpose     String    @db.Text                                                           // Keperluan penggunaan (opsional)
  createdAt   DateTime  @default(now())                  @map("created_at")       // Waktu digunakan

  item        Item      @relation(fields: [itemId], references: [itemId])        // Relasi ke item

  @@map("used_items")
}

enum ChangeType {
  IN
  OUT
  USED
}
